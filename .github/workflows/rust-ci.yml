name: rust-ci

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  checks: write

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: hello-blea

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: 🌩️ Checkout repository
        uses: actions/checkout@v3

      - name: 🧰 Install dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install libdbus-1-dev

      - name: 🔧 Cache packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 🔩Test
        run: cargo test

      - name: 🔍 Run clippy
        uses: actions-rs/clippy-check@v1
        if: ${{ runner.os == 'Linux' }}
        with:
          name: clippy ${{ matrix.os }}
          token: ${{ github.token }}
          args: --all-features

      - name: 📚️ Install target
        if: ${{ runner.os == 'macOS' }}
        run: |
          rustup update
          rustup target add aarch64-apple-darwin

      - name: 📦 Build
        run: |
          cargo build --all --release

      - name: 📦 Build macOS arm64
        if: ${{ runner.os == 'macOS' }}
        run: cargo build --all --release --target=aarch64-apple-darwin

      - name: ✂️ Strip symbols
        if: ${{ runner.os != 'Windows' }}
        run: |
          strip target/release/${PROJECT_NAME}

      - uses: actions/upload-artifact@v3
        if: ${{ runner.os != 'Windows' }}
        with:
          name: ${{ runner.os }}_amd64
          path: target/release/${{ env.PROJECT_NAME }}
          retention-days: 7

      - uses: actions/upload-artifact@v3
        if: ${{ runner.os == 'Windows' }}
        with:
          name: ${{ runner.os }}_amd64
          path: target/release/${{ env.PROJECT_NAME }}.exe
          retention-days: 7

      - uses: actions/upload-artifact@v3
        if: ${{ runner.os == 'macOS' }}
        with:
          name: ${{ runner.os }}_arm64
          path: target/aarch64-apple-darwin/release/${{ env.PROJECT_NAME }}
          retention-days: 7

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: 🌩️ Checkout repository
        uses: actions/checkout@v3

      - name: 🐧 Download linux amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: Linux_amd64
          path: releases/Linux_amd64/

      - run: tar -czf releases/Linux_amd64.tar.gz releases/Linux_amd64

      - name: 🍏 Download mac amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: macOS_amd64
          path: releases/macOS_amd64/

      - run: tar -czf releases/macOS_amd64.tar.gz releases/macOS_amd64

      - name: 🍎 Download mac amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: macOS_arm64
          path: releases/macOS_arm64/

      - run: tar -czf releases/macOS_arm64.tar.gz releases/macOS_arm64

      - name: 🪟Download windows amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: Windows_amd64
          path: releases/Windows_amd64/

      - run: zip releases/Windows_amd64.zip releases/Windows_amd64

      - name: 🚀 Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/Linux_amd64.tar.gz
            releases/macOS_amd64.tar.gz
            releases/macOS_arm64.tar.gz
            releases/Windows_amd64.zip
        env:
          GITHUB_TOKEN: ${{ github.token }}
